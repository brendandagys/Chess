AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for chess serverless API.

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10
    MemorySize: 128

Resources:
  # API
  WebSocketApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Ref AWS::StackName
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"

  WebSocketDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ConnectRoute
      - DisconnectRoute
      - GameRoute
    Properties:
      ApiId: !Ref WebSocketApi

  WebSocketStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Prod
      DeploymentId: !Ref WebSocketDeployment
      ApiId: !Ref WebSocketApi
      AutoDeploy: true

  # CONNECT
  ConnectFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: rust-cargolambda
      BuildProperties:
        Binary: connect
    Properties:
      CodeUri: ./rust_app
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - arm64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: game
        - DynamoDBCrudPolicy:
            TableName: user

  ConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationUri: !GetAtt ConnectFunction.Arn
      IntegrationType: AWS_PROXY
      PayloadFormatVersion: "1.0"

  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: "$connect"
      Target: !Sub "integrations/${ConnectIntegration}"

  # DISCONNECT
  DisconnectFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: rust-cargolambda
      BuildProperties:
        Binary: disconnect
    Properties:
      CodeUri: ./rust_app
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - arm64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: game
        - DynamoDBCrudPolicy:
            TableName: user

  DisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationUri: !GetAtt DisconnectFunction.Arn
      IntegrationType: AWS_PROXY
      PayloadFormatVersion: "1.0"

  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: "$disconnect"
      Target: !Sub "integrations/${DisconnectIntegration}"

  # GAME
  GameFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: rust-cargolambda
      BuildProperties:
        Binary: game
    Properties:
      CodeUri: ./rust_app
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - arm64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: game
        - DynamoDBCrudPolicy:
            TableName: user

  GameIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationUri: !GetAtt GameFunction.Arn
      IntegrationType: AWS_PROXY
      PayloadFormatVersion: "1.0"

  GameRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: game
      Target: !Sub "integrations/${GameIntegration}"

  GameTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: game
      KeySchema:
        - AttributeName: game_id
          KeyType: HASH
        - AttributeName: created
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: game_id
          AttributeType: S
        - AttributeName: created
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: project
          Value: !Ref AWS::StackName

  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: user
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: created
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: created
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: project
          Value: !Ref AWS::StackName

Outputs:
  WebSocketApiUrl:
    Value: !Sub "wss://${WebSocketApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
